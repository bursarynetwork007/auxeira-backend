{
  "/workspaces/auxeira-backend/backend/serverless.yml": {
    "versionFramework": "4.21.1",
    "servicePath": "/workspaces/auxeira-backend/backend/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "auxeira-backend",
      "frameworkVersion": "^4.0.0",
      "package": {
        "patterns": [
          "!awscliv2.zip",
          "!.serverless/**",
          "!node_modules/aws-sdk/**",
          "!**/*.zip",
          "!**/*.backup",
          "!aws/**",
          "!.env*",
          "!README.md",
          "!Dockerfile",
          "!docker-compose.yml",
          "!package-original.json",
          "!src/types/**",
          "!src/websocket/**",
          "!src/ml-pipeline/**",
          "lambda-enhanced.js",
          "src/services/auth-dynamodb.service.js",
          "package.json",
          "node_modules/**"
        ]
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "stage": "dev",
        "memorySize": 2048,
        "timeout": 29,
        "deploymentBucket": {
          "name": "auxeira-backend-deployment-bucket-dev"
        },
        "environment": {
          "NODE_ENV": "production"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:Query",
              "dynamodb:Scan",
              "dynamodb:GetItem",
              "dynamodb:PutItem",
              "dynamodb:UpdateItem",
              "dynamodb:DeleteItem"
            ],
            "Resource": [
              "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-users-dev",
              "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-sessions-dev",
              "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-users-dev/index/*"
            ]
          }
        ],
        "versionFunctions": true
      },
      "functions": {
        "api": {
          "handler": "lambda-enhanced.handler",
          "events": [
            {
              "http": {
                "path": "/",
                "method": "ANY",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            },
            {
              "http": {
                "path": "/{proxy+}",
                "method": "ANY",
                "cors": {
                  "origin": "*",
                  "headers": [
                    "Content-Type",
                    "Authorization",
                    "X-Requested-With",
                    "x-csrf-token",
                    "Accept"
                  ],
                  "allowCredentials": "<REDACTED>"
                }
              }
            }
          ],
          "environment": {
            "USERS_TABLE": "auxeira-backend-users-dev",
            "SESSIONS_TABLE": "auxeira-backend-sessions-dev",
            "JWT_SECRET": "<REDACTED>",
            "JWT_REFRESH_SECRET": "<REDACTED>"
          }
        }
      },
      "resources": {
        "Resources": {
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "auxeira-backend-users-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "email",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "email",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UserIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "id",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "SessionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "auxeira-backend-sessions-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "sessionId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "sessionId",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UserIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TimeToLiveSpecification": {
                "AttributeName": "expiresAt",
                "Enabled": true
              }
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "stage": "dev",
      "memorySize": 2048,
      "timeout": 29,
      "deploymentBucket": {
        "name": "auxeira-backend-deployment-bucket-dev"
      },
      "environment": {
        "NODE_ENV": "production"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-users-dev",
            "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-sessions-dev",
            "arn:aws:dynamodb:us-east-1:*:table/auxeira-backend-users-dev/index/*"
          ]
        }
      ],
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "error": {
      "message": "Serverless command \"offline start\" not found. Run \"serverless help\" for a list of all available commands.",
      "code": "UNRECOGNIZED_CLI_COMMAND"
    },
    "serviceRawFile": "service: auxeira-backend\nframeworkVersion: ^4.0.0\n\npackage:\n  patterns:\n    - '!awscliv2.zip'\n    - '!.serverless/**'\n    - '!node_modules/aws-sdk/**'\n    - '!**/*.zip'\n    - '!**/*.backup'\n    - '!aws/**'\n    - '!.env*'\n    - '!README.md'\n    - '!Dockerfile'\n    - '!docker-compose.yml'\n    - '!package-original.json'\n    - '!src/types/**'\n    - '!src/websocket/**'\n    - '!src/ml-pipeline/**'\n    - 'lambda-enhanced.js'\n    - 'src/services/auth-dynamodb.service.js'\n    - 'package.json'\n    - 'node_modules/**'\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: us-east-1\n  stage: ${opt:stage, 'dev'}\n  memorySize: 2048\n  timeout: 29\n  deploymentBucket:\n    name: auxeira-backend-deployment-bucket-${self:provider.stage}\n  environment:\n    NODE_ENV: production\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource:\n        - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-users-${self:provider.stage}\"\n        - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-sessions-${self:provider.stage}\"\n        - \"arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-users-${self:provider.stage}/index/*\"\n        \n\n          \nfunctions:\n  api:\n    handler: lambda-enhanced.handler\n    events:\n      - http:\n          path: /\n          method: ANY\n          cors:\n            origin: '*'\n            headers:\n              - Content-Type\n              - Authorization\n              - X-Requested-With\n              - Accept\n            allowCredentials: false\n      - http:\n          path: /{proxy+}\n          method: ANY\n          cors:\n            origin: '*'\n            headers:\n              - Content-Type\n              - Authorization\n              - X-Requested-With\n              - x-csrf-token\n              - Accept\n            allowCredentials: false\n\n\n\n    environment:\n      USERS_TABLE: ${self:service}-users-${self:provider.stage}\n      SESSIONS_TABLE: ${self:service}-sessions-${self:provider.stage}\n      JWT_SECRET: ${env:JWT_SECRET, 'your-super-secret-jwt-key-change-in-production'}\n      JWT_REFRESH_SECRET: ${env:JWT_REFRESH_SECRET, 'your-super-secret-refresh-key-change-in-production'}\n\nresources:\n  Resources:        \n    UsersTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:service}-users-${self:provider.stage}\n        AttributeDefinitions:\n          - AttributeName: email\n            AttributeType: S\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: email\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: UserIdIndex\n            KeySchema:\n              - AttributeName: id\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n        \n    SessionsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:service}-sessions-${self:provider.stage}\n        AttributeDefinitions:\n          - AttributeName: sessionId\n            AttributeType: S\n          - AttributeName: userId\n            AttributeType: S\n        KeySchema:\n          - AttributeName: sessionId\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: UserIdIndex\n            KeySchema:\n              - AttributeName: userId\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n        TimeToLiveSpecification:\n          AttributeName: expiresAt\n          Enabled: true\n",
    "command": [
      "offline",
      "start"
    ],
    "options": {},
    "orgId": "00a51e9b-62da-43be-8a05-85bc1ba7e140",
    "orgName": "lante",
    "userId": "7pMlkpmqlcShND1h6g",
    "userName": "lante",
    "serviceProviderAwsAccountId": "615608124862",
    "serviceProviderAwsCfStackName": "auxeira-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:615608124862:stack/auxeira-backend-dev/9091bfb0-9789-11f0-aded-0e0e759f8867",
    "serviceProviderAwsCfStackCreated": "2025-09-22T07:55:54.195Z",
    "serviceProviderAwsCfStackUpdated": "2025-09-22T15:58:22.703Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:615608124862:function:auxeira-backend-dev-api:21",
        "Description": "Current Lambda function version",
        "ExportName": "sls-auxeira-backend-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://x39efpag2i.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-auxeira-backend-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "auxeira-backend-deployment-bucket-dev",
        "ExportName": "sls-auxeira-backend-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}